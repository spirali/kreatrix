/*
   threads.kx
   Copyright (C) 2007, 2008  Stanislav Bohm

   This file is part of Kreatrix.

   Kreatrix is free software; you can redistribute it and/or modify it under
   the terms of the GNU General Public License as published by the Free
   Software Foundation; either version 2, or (at your option) any later
   version.

   Kreatrix is distributed in the hope that it will be useful, 
   but WITHOUT ANY WARRANTY; without even the implied warranty 
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with Kreatrix; see the file COPYING. If not, see 
   <http://www.gnu.org/licenses/>.
*/
	
(isLoaded: #threads) ifTrue: [ ^getModule: #threads ].
//--- module init ---

(VM hasSupport: "threads") ifFalse: [
	throw: (Exception clone 
		message: "VM is not compiled with threads support")
].


loadCLibrary: "threads".

Thread do: {
	run = { ^nil }.
}.

ThreadWithBlock = Thread clone do: {
		block <- EmptyScopedBlock.
		run = { ^block value}.
		join = { |result|
			result << resend join.
			/**
				Prevent cycle references.
				For cleaner memory debugging.
				This can be removed.
			*/
			block: EmptyScopedBlock.
			^result.
		}.
}.


ScopedBlock do: {
	runInThread = { |thread|
		thread << threads ThreadWithBlock clone.
		thread block: self.
		^thread start.
	}.
	
	runInDetachedThread = { |thread|
		thread << threads ThreadWithBlock clone.
		thread block: self.
		^thread startDetached.
	}.

}.

//--- end of module init  ---
registerAs: #threads.
